<?php

namespace App\Http\Controllers\API;

use App\Http\Controllers\Controller;
use App\Http\Requests\StoreInvoicesRequest;
use App\Http\Requests\UpdateInvoicesRequest;
use App\Models\Invoices;
use Illuminate\Http\JsonResponse;
use Psy\Util\Json;
use Symfony\Component\HttpFoundation\Response;

class InvoicesController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return JsonResponse
     */
    public function index()
    {

        $invoices = Invoices::all();
        return response()->json($invoices);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \App\Http\Requests\StoreInvoicesRequest  $request
     * @return JsonResponse
     */
    public function store(StoreInvoicesRequest $request)
    {
        $validateData = $request->validated();
        $newInvoice = new Invoices($validateData);
        $newInvoice->save();
        return response()->json($newInvoice, Response::HTTP_CREATED);
    }

    /**
     * Display the specified resource.
     *
     * @return JsonResponse
     */
    public function show($id)
    {
        $invoices = Invoices::findOrFail($id);
        return response()->json($invoices, 200);
    }


    /**
     * Update the specified resource in storage.
     *
     * @param  \App\Http\Requests\UpdateInvoicesRequest  $request
     * @return JsonResponse
     */
    public function update(UpdateInvoicesRequest $request,$id): JsonResponse
    {
        $invoices = Invoices::findOrFail($id);

        $price = $request->has('price') ? $request->get('price') :  $invoices->price;
        $number_invoices = $request->has('number_invoices') ? $request->get('number_invoices') :  $invoices->number_invoices;

        $request->validate([
            'price' => 'sometimes',
            'number_invoices' => 'sometimes'
        ]);

        $invoices->price = $price;
        $invoices->number_invoices = $number_invoices;

        $invoices->save();
//        try{
//        $validateData = $request->validated();
//        $invoices->update($validateData);
//        return response()->json('hello', Response::HTTP_ACCEPTED);
//    }catch(error){
//            return response()->json(['message'=> '3ftgrthr']);
//        }
        //$invoices = Invoices::created($request->validated());
        return response()->json($invoices, 200);
    }
     +/**
   4  * Remove the specified resource from storage.
     *
     * @param Invoices $invoices
     * @return JsonResponse
     */
    public function destroy($id ,Invoices $invoices)
    {

        $invoices->delete();
        return response()->json($invoices::all());
    }
}
